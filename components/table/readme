/**
 * A simple table.
 * The options may be provided either when controller is instantiated,
 * or when the component is rendered
 *
 * new mc.Table.controller(table)
 *   {array} table: table values, an array of arrays.
 *             The numbers of columns is determined from the first row.
 *
 * mc.Table.view(ctrl, selectors, attrs)
 *   {obj} ctrl: tables's controller.
 *   {obj} selectors: Selectors to add to tag names. Optional.
 *           { _parent:..., _tr:, _even:, _odd:, '0':, '1': }
 *             {str} _parent: selector string for <table>
 *             {str} _tr: selector for each table row.
 *             {str} _even: selector for even rows.
 *             {str} _odd: selector for odd rows.
 *             {str} '2': selector string for row 2 (0-based).
 *   {obj} attrs: Attrs for elements. Optional.
 *           { _parent:{...}, _tr:{}, _even:{}, _odd:{}, '0':{}, '1':{} }
 *             {obj} _parent: attrs for <table>
 *             attrs has the same keys as selectors with corresponding meanings.
 *
 * SAMPLE USAGE ================================================================

    <script src="js/vendor/mithril.js"></script>
    <script src="../components/table/table.js"></script>

    var app = {
      controller: function () {
        var table = [
          ['Header 1 aaaaaaaaaa', 'Header 2', 'Header 3', 'Header 4', 'Header 5', 'Header 6', 'Header 7'],
          ['row 1 cell 1 aaaaaaaaaa', '(row 1, col 2)', '(row 1, col 3)', '(row 1, col 4)', '(row 1, col 5)', '(row 1, col 6)', '(row 1, col 7)'],
          ['row 2 cell 1 aaaaaaaaaa', '(row 2, col 2)', '(row 2, col 3)', '(row 2, col 4)', '(row 2, col 5)', '(row 2, col 6)', '(row 2, col 7)'],
          ['row 3 cell 1 aaaaaaaaaa', '(row 3, col 2)', '(row 3, col 3)', '(row 3, col 4)', '(row 3, col 5)', '(row 3, col 6)', '(row 3, col 7)'],
          ['row 4 cell 1 aaaaaaaaaa', '(row 4, col 2)', '(row 4, col 3)', '(row 4, col 4)', '(row 4, col 5)', '(row 4, col 6)', '(row 4, col 7)']
        ];

        this.table1 = new mc.Table.controller(table);
        this.table2 = new mc.Table.controller(table);
      },

      view: function (ctrl) {
        var selectors2 = {
          _parent: '.myClass#myId',
          _tr: '.myTr',
          _even: '.myTrEven',
          '2': '.myTrRow2'
        };
        var attrs2 = {
          _parent: {style: {color: 'red'}},
          _odd: {style: {backgroundColor: 'pink'}},
          '0': {style: {color: 'blue'}},
          '2': {style: {color: 'green', backgroundColor: 'yellow'}}
        };

        return m('div', [
          mc.Table.view(ctrl.table1),
          m('p'),
          mc.Table.view(ctrl.table2, selectors2, attrs2)
        ]);
      }
    };

    m.module(document.body, app);
 */